name: CI & Release

on:
  push:
    branches: [main]

env:
  PYTHON_VERSION: "3.13"

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync --dev

      - name: Run linting and tests
        run: |
          uv run ruff check .
          uv run mypy src
          uv run pytest --cov=src/caltrain_mcp --cov-report=term-missing

  release:
    runs-on: ubuntu-latest
    needs: test
    concurrency: release
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync --dev

      - name: Configure git
        run: |
          git config --global user.name "Sandeep Mehta"
          git config --global user.email "sandeep@example.com"

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.21.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout tagged version
        if: steps.release.outputs.released == 'true'
        uses: actions/checkout@v4
        with:
          ref: v${{ steps.release.outputs.version }}
          fetch-depth: 0

      - name: Setup Python for build
        if: steps.release.outputs.released == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup uv for build
        if: steps.release.outputs.released == 'true'
        uses: astral-sh/setup-uv@v6

      - name: Build package from clean tag
        if: steps.release.outputs.released == 'true'
        run: uv build

      - name: Publish to PyPI
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true